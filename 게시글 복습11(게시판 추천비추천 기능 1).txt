<게시판 추천/비추천 기능 1> - 추천/비추천 기능 구현(추천/비추천 취소 없음)

 - /board/detail.jsp
	- 추천(.up)/비추천(.down) 버튼 추가 type은 button으로 <1> o
	- 추천/비추천 클릭 이벤트 등록 <2>
		- 추천버튼을 클릭하면 추천/비추천값을 1로, 비추천 버튼을 클릭하면 추천/비추천값을 -1로 설정 <3>
		- ajax로 서버에 데이터를 전송 <6>
	  		- url : /board/like
			- type : post
			- data : 게시글 번호, 로그인한 유저의 아이디, 추천/비추천 값
		- 서버에서 데이터가 오면 알림창을 띄움 <19> o
			- 추천/비추천 값이 1이면 '추천하였습니다'로 알림창을 띄우고, 
			  -1이면 '비추천하였습니다'로 알침창을 띄움

 - LikeVo클래스 생성(likes테이블 참고) <4>
	- 멤버 변수 추가 o
		- int num
		- int boardNum
		- String id
		- int up
	- getter/setter 추가 o
	- toString 추가 o

 - BoardController
	- /board/like 담당 메소드 추가 <5> o
		- 화면에서 보내준 정보(LikeVo에 담아서)를 가져옴(매개변수) <7> o
		- 서비스에게 정보(LikeVo)를 알려주면서 추천/비추천을 실행하라고 요청(updateLike) <8> o
		- 아무 문자열을 반환 <9>

 - BoardServiceImp
	- updateLike
		- 다오에게 추천정보(LikeVo)를 주면서 아이디, 게시글 번호와 일치하는 정보를 달라고 요청(getLike) <10> o
			- getLike가 정상동작확인 테스트(가져온 정보 콘솔에 출력) <12> o
		- 정보가 없으면 다오에게 추천정보(LikeVo)를 주면서 DB에 추가하라고 요청(insertLike) <13> o
			- insertLike가 정상 동작했는지 mysql을 이용하여 DB에 추가된 내용 확인 <15> o
		- 정보가 있으면 다오에게 추천정보(LikeVo)를 주면서 DB에 업데이트라하고 요청(updateLike) <16> o
			- updateLike가 정상 동작했는지 mysql을 이용하여 DB에 수정된 내용 확인 <18> o

 - BoardMapper
	- getLike <11>
		- select문으로 아이디 게시글 번화와 일치하는 정보를 검색하는 쿼리문 작성 o
	- insertLike <14>
		- insert문으로 아이디, 게시글번호, 추천/비추천값을 추가하는 쿼리문 작성 o
	- updateLike <17>
		- update문으로 아이디, 게시글번호 일치하는 추천/비추천값(up)을 수정하는 쿼리문 작성 o