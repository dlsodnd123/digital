SQL

데이터 정의어 : 데이터베이스/테이블을 관리하는 언어
엔티티 : 클래스 => 테이블

NN : Not Null => 데이터의 값으로 null값이 오지 못하도록 막아줌
UQ : Unique => 값이 중복될 수 없음
AI : Auto Incermental => 값이 자동으로 증가(정수 속성만 체크 가능)
PK : Primary Key => 기본키 => 중복 => 유니크 => NN을 같이 체크

슈퍼키 : 정보 하나를 추출할 수 있는 고유한 속성이나 속성들의 집합
 - ex) : 대한민국 사람을 구분할 수 있는 속성 : 
주민번호 
주민번호, 이름,
주민번호, 이름, 주소
태어난날, 시간, 장소, 이름, 성별

후보키 : 슈퍼키 중에서 불필요한 정보를 제거

기본키 : 후보키에서 가장 적절한 속성

자료형
- 문자열
CHAR(SIZE) : SIZE개의 문자열을 저장, 저장된 문자열이 1자이든 0자이든 크기가 SIZE개로 고정
VARCHAR(SIZE) : 최대 SIZE개의 문자열을 저장, 저장된 문자열이 1자이면 1개 크기로 저장
TINYTEXT : 최대 225자
TEXT : SIZE개 문자 저장 최대 65,535자
MEDIUMTEXT : 최대 16,777,215자
LONGTEXT : 최대 4,294,967,295자

- 숫자
INT : 정수 -2,147,483,649 ~ 2,147,483,647
BIGINT : 매우 큰 정수
DOUBLE : 실수
BOOL : 0을 거짓, 0이 아닌수를 참으로 판별

- 날짜,시간
DATE : 날짜
DATETIME : 날짜 + 시간
TIME : 시간
YEAR : 년도

생성
create 생성할유형 if not exists 이름

삭제
drop 삭제할유형 if exists 이름;

추가
insert into 테이블명 (속성1, 속성2, ... 속성n) values(값1, 값2 ... , 값n);

검색
select * form 테이블명;
 - * : 모든속성

속성추가
alter table 테이블명 add 속성명 타입 기본값;

속성제거
alter table 테이블명 drop 속성명

테이블명 변경
rename table 테이블명(전) to 테이블명(후)

11/11

CRUD : Create, Read, Update, Delete
create : 테이블/DB를 생성
drop : 테이블/DB를 삭제
insert : 테이블의 행을 추가
select : 검색(테이블 등 다양한 정보)

SQL에서 '=' 대입연산가 아니고 '같다' 라는 의미

--- 검색 ---

별명
select <속성> as <별명> from <테이블명>

select <상수 또는 문자 또는 날짜> as <별명> from <테이블>

중복된 값 제외하고 출력
select distinct <속성> form <테이블명>

where구를 사용한 행 선택
select <속성> from <테이블명> where<조건식>;

<집약과 정렬>
count, sum, avg, max, min

- 집약
GROUP BY
테이블을 그룹으로 나눈다.
group by는 마지막에 작성

HAVING 집약(group)한 결과에 조건을 지정

group by <속성> having

- 정렬
 order by

 select 속성1, 속성2, ... from 테이블명
	where 조건식
	order by 속성1 정렬기준, 속성2 정렬기준

 정렬기준
 asc : 오름차순
 desc : 내림차순

limit
지정된 범위의 객수만 검색할 때 사용

select 속성1, 속성2... form 테이블명 limit 시작번지, 갯수

--- 삭제  ----
조건에 해당하는 행전체 삭제
delete from <테이블명> where 조건

---업데이트---
 update 테이블명
	set 속성1 = 값1, 속성2 = 값2
	where 조건

---테이블 속성 조회----
explain 테이블명
desc 테이블명

11/12
트랜잭션 : 하나 이상의 갱신 처리, 트랜잭션을 선언하면 저장여부를 작업 후 판단
	start transaction
	DML 작업만
	roolback; 작업한 내용이 취소됨
	commit; 이전 작업을 반영하여 저장 

view - SQL문이 복잡한경우에 조회할 때 사용
	create view department(dep)
	     as
	     select distinct dep from test01;

	select * from department;

replace 교체
	select replace('가나다라마바','가','A');
	-> A나다라마바

문자열 비교할때 like를 사용
	%강 : '강'으로 시작하는 
	시% : '시'로 끝나는
	like concat('%','시') : '시'가 들어가는 모든

부분문자열 추출

	substr('가나다라', 3); : 3번째 부터 추출
	->다라

	substr('가나다라',2,1); : 2번째 부터 1글자
	-> 나

period_diff(2011,2001) : 개월수 차이를 구함, 년도와 월, 20년 11월 임.

select date_add('2020-11-12',interval 1 month);
-> 날짜 더하기       시작값     더할 값   형식(year, month, day 등)

select curtime(); 현재시간
select now(); 현재날짜,시간

alter table product change column register_date register_date datetime not null default now();
-> 기본 속성 값 변경


cast 형변환
	select cast(2019123002/1000000 as decimal);
				     10진수 정수로
	->2019

convert 형변환
	select convert(2019123002/1000000, decimal);
	->2019

between 값1 and 값2 : 값1과 값2 사이의 값을 알려줌

null은 '='으로 비교할 수 없고 'is'로 비교해야 한다.

in 여러개의 값을 검색 할 때 사용

csas
	select name,
	 case when tel is null then '미등록'
	      when tel is not null then tel
	      end as '전화번호'
	 from test01;


11/13
E - R 다이어그램

외래키지정
alter table 테이블명 add [constraint 제약조건이름] 
foreign key(테이블명의 속성)
references상대테이블명(속성명)

외래키특징
 - 외래키의 값은 null이거나 상대 테이블과 연결된 속성의 값만 올수 있다.

join : 두개 이상의 테이블을 연결하여 검색할 때 사용
	
	테이블A의 외래키로 테이블 B의 기본키가 지정되어 있는 상황

	select 속성1, 속성2, ... 속성n 
	from 테이블명A
		join 테이블명 B
		on 테이블명A.외래키명 = 테이블명B.기본키명;
	
	속성명이 다른경우 테이블명 생략가능

11/14
테이블구조

ERD는 요구사항분석을 통해 작성되어야 한다.