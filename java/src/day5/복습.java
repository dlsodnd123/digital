package day5;

public class 복습 {

	public static void main(String[] args) {
		/* 
		 * <변수> : "필요한 테이터를 관리하기 위한 변수를 선언할 수 있다." - 핵심
		 *  - 필요한 정보를 저장하기 위해서 변수를 선언할 수 있다.
		 *  - 자료형(변수 타입)
		 *  - 변수 선언 및 초기화
		 *  - 변수명 작성 규칙 -> 필수
		 *   1. 예약어 사용불가
		 *   2. 특수문자는 $와 _ 만 사용가능
		 *   3. 
		 *  - 변수명 작성 권고사항 -> 선택
		 *  - 자료형변환 : 자동, 명시적
		 *  - 콘솔 입출력
		 *  - 멤버 변수 : 클래스의 멤버 변수는 클래스 내의 메소드에서 사용 가능한 변수
		 *  - 지역 변수 : 변수를 선언한 지역에서만 사용한 변수
		 *  - 객체 멤버 변수 : static X, 객체 각각이 가지고 있는 변수
		 *  - 클래스 멤버 변수 : static O, 클래스가 가지고 있는 변수로 모든 객체가 공유
		 *  - 매개변수 : 메소드를 실행하기 위해 필요한 정보를 담고 있는 변수
		   
		 * <연산자> : 종류를 알고, 결과를 예측할 수 있다.
		 *  - 연산자 "종류와 그에 따른 결과 값을 계산할 수 있다." "주어진 문제를 해결하기 위해 연산자를 활용할 수 있다."  - 핵심
		 *  - 대입, 산술, 비교, 논리, 증감, 조건선택, 비트, 결합연산자(+=, -=)
		 *  - 조건식 : 결과가 참 또는 거짓으로 나오는 식
		 *  다음 중 조건식에 해당하는 것은? 2, 5
		 *   1. num = 10
		 *   2. x > 10
		 *   3. x = x + 1
		 *   4. x++
		 *   5. x>=0 && x<= 100
		   
		 * <조건문> : 조건문의 종류를 알고 사용할 수 있다.
		 *  - 조건문을 이용하여 원하는 문제 해결할 수 있다.
		 *  - ~하면 ...한다
		 *  - 조건식 : ~, 실행문 : ...
		 *  - 논리연산자에서 &&연산일 경우 앞의 조건식 거짓이면 뒤의 조건식을 보지않아도 거짓이므로 뒤의 조건식을 실행하지 않음
		 *  - ||연산일 경우 앞의 조건식이 참이면 뒤의 조건식을 보지 않아도 참이므로 뒤의 조건식을 실행하지 않음
		   
		 * <반복문> : 반복문의 종류를 알고 사용할 수 있다.
		 *  - 반복문을 이용하여 원하는 문제를 해결할 수 있다.
		 *  - 반복문 문제는 반복횟수와 규칙성 찾는 것이 중요하다.
		 *  - 반복문 문제 해결 과정
		 *   1. 반복횟수 : 초기화 조건식, 증감연산자
		 *   2. 규칙성 : 실행문
		 *   3. 반복문 종료 후 : 결과를 활용
		   
		 * <배열> : 배열을 반복문과 함께 사용할 수 있다.
		 *  - new 연산자를 이용
		 *  - 시작번지는 0번지
		 *  - 같은 자료형, 같은 의미의 변수들의 집합(참조변수)
		 *  - 배열 선언 방법
		 *  - 배열 사용 방법
		 *  - 배열 특징
		 */

	}

}
