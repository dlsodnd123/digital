package day10;

public class 복습 {

	public static void main(String[] args) {
		/*
		 * 클래스 : 정보를 쉽게 관리하기 위해 하나의 정보를 여러 변수들로 묶어 놓은 것 + 기능을 추가
		 *  - 멤버 변수 : 정보를 나타내기 위한 정보
		 *  - 멤버 메소드 : 정보를 가공하기 위한 기능
		 *  - 생성자 : 초기화
		  
		 * 오버로딩 : 하나의 메소드명에 여러 메소드가 존재하는 것
		 * 1. 매개변수의 갯수가 다른 경우
		 * 2. 매개변수의 자료형이 다른 경우
		 
		 * 생성자의 특징
		 *  - 이름이 클래스명으로 고정
		 *  - 리턴타입이 없다. => void를 쓰는게 아니라 아예 쓰지를 않는다.
		 *  - 생성자는 객체를 생성할 때 1번만 호출된다.
		   
		 * this : 나를 가르키는 참조변수
		 *  - 멤버 메소드에서 매개변수명이 멤버변수 명과 같을 때 매개변수와 멤버 변수를 구별하기 위해 this를 사용
		 *  - 가자동완성을 위해
		   
		 * this() : 생성자
		 *  - 생성자에서 다른 생성자를 호출할 때 사용
		 *  - 생성자안에서 사용되며, 가장 처음에 사용된다. 
		   
		 * static : 클래스의 멤버변수/메소드에 붙임
		 *  - 클래스가 언급되면 생성
		 *  - 클래스를 통해 호출(사용)된다.
		 *  - 멤버 변수가 모든 객체에서 공통으로 필요할 때 사용
		   
		 *  final : 마지막의
		 *  - 변수 : 상수
		 *  - 메소드 : 오버라이딩을 할 수 없고
		 *  - 클래스 : 상속할 수 없다.
		  
		 * 클래스간의 관계
		 *  - 원은 도형이다. -> is a : 도형 클래스를 상속받은 원 클래스
		 *  - 도형은 원이다.
		 *  - 스마트폰은 카메라이다.
		 *  - 스마트폰은 카메라를 가지고 있다. ->has a : 카메라 클래스는 스마트폰 콜래스의 멤버 변수
		 *  - is a관계(상속)
		 *    'A is a B : A는 B이다'가 성립하면 상속
		 *    B클래스를 A가 상속받는다.
		 *  - has a관계(포함)
		 *    'A has a B : A는 B를 가지고 있다'가 성립하면 포함
		 *    B클래스가 A클래스의 멤버 변수이다.
		     
		 * 자식 클래스에게 부모는 1개이다.
		 * 
		 * import : 미리 만들어놓은 패키지나 클래스를 가져오게 하는 키워드
		 * 
		 * */ 
	}

}
